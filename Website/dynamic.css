@isPublish: false;
@btn-font-size: 1rem;
@btn-border-radius: 4px;
@btn-padding-y: 1.25rem;
@btn-padding-x: 2rem;

@btn-font-size-sm: .8rem;
@btn-border-radius-sm: 4px;
@btn-padding-y-sm: .6rem;
@btn-padding-x-sm: 1.2rem;

@btn-font-size-md: .8rem;
@btn-border-radius-md: 4px;
@btn-padding-y-md: .6rem;
@btn-padding-x-md: 1.2rem;

@btn-font-size-lg: 1rem;
@btn-border-radius-lg: 4px;
@btn-padding-y-lg: 1.25rem;
@btn-padding-x-lg: 2rem;

.btn when (@isGhostButtonBorder) {
    border-width: 2px;
}

img,
.card-wrap,
.card-wrapper,
.video-wrapper,
.mbr-figure iframe,
.google-map iframe,
.slide-content,
.plan,
.card,
.item-wrapper {

    & when not (@isRoundedImages) {
        border-radius: 0 !important;
    }
    
    & when (@isRoundedImages) {
        border-radius: 2rem !important;
    }
}

.video-wrapper {
    overflow: hidden;
}

// .btn when not (@isLargeButtons) {
//     padding: 0.75rem 1.5rem !important;
// }

// .btn when (@isLargeButtons) {
//     @media (max-width: 767px) {
//         padding: 0.75rem 1.5rem !important;
//     }
// }

// BACKGROUND
body {
    background-color: @backgroundColor;
}

// fix for builder
& when not (@isPublish) {
    .is-builder .template {
        background-color: @backgroundColor;
    }
}

// FONTS

body {
    font-family: @mainFont;
}

.display-1 {
    font-family: @display1Font;
    font-size: @display1Size *1rem;
    line-height: .85;
    letter-spacing: -.0375rem;

    >.mbr-iconfont {
        font-size: @display1Size *1.25rem;
    }
}

.display-2 {
    font-family: @display2Font;
    font-size: @display2Size *1rem;
    line-height: .9;
    letter-spacing: -.0325rem;

    >.mbr-iconfont {
        font-size: @display2Size *1.25rem;
    }
}

.display-4 {
    font-family: @display4Font;
    font-size: @display4Size *1rem;
    letter-spacing: -.01em;
    line-height: 1.5;

    >.mbr-iconfont {
        font-size: @display4Size *1.25rem;
    }
}

.display-5 {
    font-family: @display5Font;
    font-size: @display5Size *1rem;
    line-height: .9;
    letter-spacing: -.0325rem;

    >.mbr-iconfont {
        font-size: @display5Size *1.25rem;
    }
}

.display-7 {
    font-family: @display7Font;
    font-size: @display7Size *1rem;
    line-height: 1.5;
    letter-spacing: -.05rem;

    >.mbr-iconfont {
        font-size: @display7Size *1.25rem;
    }
}

/* ---- Fluid typography for mobile devices ---- */

/* 1.4 - font scale ratio ( bootstrap == 1.42857 ) */
/* 100vw - current viewport width */
/* (48 - 20)  48 == 48rem == 768px, 20 == 20rem == 320px(minimal supported viewport) */
/* 0.65 - min scale variable, may vary */


@media (max-width: 992px) {
    .display-1 {
        font-size: @display1Size * 0.8rem;
    }
}

@media (max-width: 768px) {
    .display-1 {
        @display1Size-min: @display1Size - (@display1Size - 1) * 0.65;
        font-size: @display1Size * 0.7rem;
        font-size:~"calc( @{display1Size-min}rem + (@{display1Size} - @{display1Size-min}) * ((100vw - 20rem) / (48 - 20)))";
        line-height:~"calc( 1.1 * (@{display1Size-min}rem + (@{display1Size} - @{display1Size-min}) * ((100vw - 20rem) / (48 - 20))))";
    }

    .display-2 {
        @display2Size-min: @display2Size - (@display2Size - 1) * 0.65;
        font-size: @display2Size * 0.8rem;
        font-size:~"calc( @{display2Size-min}rem + (@{display2Size} - @{display2Size-min}) * ((100vw - 20rem) / (48 - 20)))";
        line-height:~"calc( 1.3 * (@{display2Size-min}rem + (@{display2Size} - @{display2Size-min}) * ((100vw - 20rem) / (48 - 20))))";
    }

    .display-4 {
        @display4Size-min: @display4Size - (@display4Size - 1) * 0.65;
        font-size: @display4Size * 0.8rem;
        font-size:~"calc( @{display4Size-min}rem + (@{display4Size} - @{display4Size-min}) * ((100vw - 20rem) / (48 - 20)))";
        line-height:~"calc( 1.4 * (@{display4Size-min}rem + (@{display4Size} - @{display4Size-min}) * ((100vw - 20rem) / (48 - 20))))";
    }

    .display-5 {
        @display5Size-min: @display5Size - (@display5Size - 1) * 0.65;
        font-size: @display5Size * 0.8rem;
        font-size:~"calc( @{display5Size-min}rem + (@{display5Size} - @{display5Size-min}) * ((100vw - 20rem) / (48 - 20)))";
        line-height:~"calc( 1.4 * (@{display5Size-min}rem + (@{display5Size} - @{display5Size-min}) * ((100vw - 20rem) / (48 - 20))))";
    }

    .display-7 {
        @display7Size-min: @display7Size - (@display7Size - 1) * 0.65;
        font-size: @display7Size * 0.8rem;
        font-size:~"calc( @{display7Size-min}rem + (@{display7Size} - @{display7Size-min}) * ((100vw - 20rem) / (48 - 20)))";
        line-height:~"calc( 1.4 * (@{display7Size-min}rem + (@{display7Size} - @{display7Size-min}) * ((100vw - 20rem) / (48 - 20))))";
    }
}

/* Buttons */
.button-variant(@background) {
    @color: contrast(@background, darken(@background, 50%), #ffffff, 60%);
    @border: @background;
    @active-color: @color;
    @active-border: @active-background;

    @active-background: if(eq(@background, @color),
        #fafafa,
        lighten(@background, 10%));

    &,
    &:active {
        background-color: @background !important;
        border-color: @border !important;
        color: @color !important;
        box-shadow: none;
    }

    &:hover,
    &:focus,
    &.focus,
    &.active {
        color: inherit;
        background-color: @active-background !important;
        border-color: @active-border !important;
        box-shadow: none;
    }

    &.disabled,
    &:disabled {
        color: @active-color !important;
        background-color: @active-background !important;
        border-color: @active-border !important;
    }
}

.button-outline-variant(@color) {
    @active-color: contrast(@color, darken(@color, 50%), #ffffff, 60%);
    @active-background: @color;
    @new-color: if(eq(@color, @active-color),
        #fafafa,
        darken(@color, 17%));

    &,
    &:active {
        background-color: transparent !important;

        & when (@isGhostButtonBorder) {
            border-color: @color;
        }

        & when not (@isGhostButtonBorder) {
            border-color: transparent;
        }

        color: @color;
    }

    &:hover,
    &:focus,
    &.focus,
    &.active {
        color: @new-color !important;
        background-color: transparent !important;

        & when (@isGhostButtonBorder) {
            border-color: @new-color !important;
        }

        & when not (@isGhostButtonBorder) {
            border-color: transparent !important;
        }

        box-shadow: none !important;
    }

    &.disabled,
    &:disabled {
        color: @active-color !important;
        background-color: @active-background !important;
        border-color: @active-background !important;
    }
}

.plan-variant(@className, @color) {
    &@{className} {

        .mbr-plan-subtitle,
        .mbr-plan-price-desc {
            @max: max(red(@color), green(@color), blue(@color));

            & when (@max > 200) {
                color: lighten(@color, 40%);
            }

            & when (@max > 85) and (@max <=200) {
                color: lighten(@color, 25%);
            }

            & when (@max > 50) and (@max <=85) {
                color: lighten(@color, 45%);
            }

            & when (@max <=50) {
                color: lighten(@color, 70%);
            }
        }
    }
}

.button-size(@btn-padding-y, @btn-padding-x, @btn-font-size, @btn-border-radius) {
    padding: @btn-padding-y @btn-padding-x;
    border-radius: @btn-border-radius;
}

.btn {
    .button-size(@btn-padding-y, @btn-padding-x, @btn-font-size, @btn-border-radius);
    & when not (@isLargeButtons) {
        padding: 0.75rem 1.5rem;
    }
    & when (@isLargeButtons) {
        @media (max-width: 767px) {
            padding: 0.75rem 1.5rem;
        }
    }
}

.btn-sm {
    .button-size(@btn-padding-y-sm, @btn-padding-x-sm, @btn-font-size-sm, @btn-border-radius-sm);
}

.btn-md {
    .button-size(@btn-padding-y-md, @btn-padding-x-md, @btn-font-size-md, @btn-border-radius-md);
}

.btn-lg {
    .button-size(@btn-padding-y-lg, @btn-padding-x-lg, @btn-font-size-lg, @btn-border-radius-lg);
}

.bg-primary {
    background-color: @primaryColor !important;
}

.bg-success {
    background-color: @successColor !important;
}

.bg-info {
    background-color: @infoColor !important;
}

.bg-warning {
    background-color: @warningColor !important;
}

.bg-danger {
    background-color: @dangerColor !important;
}

.btn-primary {
    .button-variant(@primaryColor);
}

.btn-secondary {
    .button-variant(@secondaryColor);
}

.btn-info {
    .button-variant(@infoColor);
}

.btn-success {
    .button-variant(@successColor);
}

.btn-warning {
    .button-variant(@warningColor);
}

.btn-danger {
    .button-variant(@dangerColor);
}

.btn-white {
    .button-variant(#eff0ec);
}

.btn-black {
    .button-variant(#232323);
}

.btn-primary-outline {
    .button-outline-variant(@primaryColor);
}

.btn-secondary-outline {
    .button-outline-variant(@secondaryColor);
}

.btn-info-outline {
    .button-outline-variant(@infoColor);
}

.btn-success-outline {
    .button-outline-variant(@successColor);
}

.btn-warning-outline {
    .button-outline-variant(@warningColor);
}

.btn-danger-outline {
    .button-outline-variant(@dangerColor);
}

.btn-black-outline {
    .button-outline-variant(#232323);
}

.btn-white-outline {
    .button-outline-variant(#fafafa);
}

.text-primary {
    color: @primaryColor !important;
}

.text-secondary {
    color: @secondaryColor !important;
}

.text-success {
    color: @successColor !important;
}

.text-info {
    color: @infoColor !important;
}

.text-warning {
    color: @warningColor !important;
}

.text-danger {
    color: @dangerColor !important;
}

.text-white {
    color: #fafafa !important;
}

.text-black {
    color: #232323 !important;
}

a.text-primary:hover,
a.text-primary:focus,
a.text-primary.active {
    color: darken(@primaryColor, 20%) !important;
}

a.text-secondary:hover,
a.text-secondary:focus,
a.text-secondary.active {
    color: darken(@secondaryColor, 20%) !important;
}

a.text-success:hover,
a.text-success:focus,
a.text-success.active {
    color: darken(@successColor, 20%) !important;
}

a.text-info:hover,
a.text-info:focus,
a.text-info.active {
    color: darken(@infoColor, 20%) !important;
}

a.text-warning:hover,
a.text-warning:focus,
a.text-warning.active {
    color: darken(@warningColor, 20%) !important;
}

a.text-danger:hover,
a.text-danger:focus,
a.text-danger.active {
    color: darken(@dangerColor, 20%) !important;
}

a.text-white:hover,
a.text-white:focus,
a.text-white.active {
    color: darken(#fafafa, 20%) !important;
}

a.text-black:hover,
a.text-black:focus,
a.text-black.active {
    color: darken(#232323, 20%) !important;
}

& when (@underlinedLinks) {
    a[class*="text-"]:not(.nav-link):not(.dropdown-item):not([role]):not(.navbar-caption) {
        transition: 0.2s;
        position: relative;
        background-image: linear-gradient(currentColor 50%, currentColor 50%);
        background-size: 10000px 2px;
        background-repeat: no-repeat;
        background-position: 0 1.2em;
    }
}

& when not (@underlinedLinks) {
    a[class*="text-"]:not(.nav-link):not(.dropdown-item):not([role]):not(.navbar-caption) {
        position: relative;
        background-image: transparent;
        background-size: 10000px 2px;
        background-repeat: no-repeat;
        background-position: 0px 1.2em;
        background-position: -10000px 1.2em;

        &:hover {
            transition: background-position 2s ease-in-out;
            background-image: linear-gradient(currentColor 50%, currentColor 50%);
            background-position: 0px 1.2em;
        }
    }
}

.nav-tabs .nav-link {
    &.active {
        color: @primaryColor;
    }

    &:not(.active) {
        color: #232323;
    }
}

.alert-success {
    background-color: #70c770;
}

.alert-info {
    background-color: @infoColor;
}

.alert-warning {
    background-color: @warningColor;
}

.alert-danger {
    background-color: @dangerColor;
}

.mbr-section-btn .btn:not(.btn-form) {
    & when (@isRoundedButtons) {
        border-radius: 100px;
    }
}

.mbr-gallery-filter li a when(@isRoundedButtons) {
    border-radius: 100px !important;
}

.mbr-gallery-filter {
    li.active .btn {
        background-color: @primaryColor;
        border-color: @primaryColor;
        color: contrast(@primaryColor, darken(@primaryColor, 45%), #ffffff, 60%);

        &:focus {
            box-shadow: none;
        }
    }
}

.nav-tabs .nav-link when(@isRoundedButtons) {
    border-radius: 100px !important;
}

a,
a:hover {
    color: @primaryColor;
}

.mbr-plan-header {
    .plan-variant(~'.bg-primary', @primaryColor);
    .plan-variant(~'.bg-success', @successColor);
    .plan-variant(~'.bg-info', @infoColor);
    .plan-variant(~'.bg-warning', @warningColor);
    .plan-variant(~'.bg-danger', @dangerColor);
}

/* Scroll to top button*/
.scrollToTop_wraper when not(@isScrollToTopButton) {
    display: none;
}

#scrollToTop a when (@isScrollToTopButton) and (@isRoundedButtons) {
    border-radius: 100px;
}

.form-control {
    .display-7;
    font-weight: 400;
    & when(@isRoundedButtons) {
        border-radius: 100px !important;
    }
    &:hover,
    &:focus {
        box-shadow: rgba(0, 0, 0, 0.07) 0px 1px 1px 0px, rgba(0, 0, 0, 0.07) 0px 1px 3px 0px, rgba(0, 0, 0, 0.03) 0px 0px 0px 1px;
        border-color: @primaryColor !important;
    }
}

.form-control:-webkit-input-placeholder {
    .display-7;
    font-weight: 400;
}

blockquote {
    border-color: @primaryColor;
}

/* Forms */
.mbr-form {
    .input-group-btn .btn when(@isRoundedButtons) {
        border-radius: 100px !important;

        &:hover {
            box-shadow: 0 10px 40px 0 rgba(0, 0, 0, .2);
        }
    }

    .input-group-btn button[type="submit"] when (@isRoundedButtons) {
        border-radius: 100px !important;
        padding: 1rem 3rem;

        &:hover {
            box-shadow: 0 10px 40px 0 rgba(0, 0, 0, .2);
        }
    }
}

//formstyler
.jq-selectbox li:hover,
.jq-selectbox li.selected {
    background-color: @primaryColor;
    color: contrast(@primaryColor, #000000, #ffffff, 60%)
}

.jq-number__spin {
    transition: 0.25s ease;
}

.jq-number__spin:hover {
    border-color: @primaryColor;
}

.jq-selectbox .jq-selectbox__trigger-arrow,
.jq-number__spin.minus:after,
.jq-number__spin.plus:after {
    transition: 0.4s;
    border-top-color: #232323;
    border-bottom-color: #232323;
}

.jq-selectbox:hover .jq-selectbox__trigger-arrow,
.jq-number__spin.minus:hover:after,
.jq-number__spin.plus:hover:after {
    border-top-color: @primaryColor;
    border-bottom-color: @primaryColor;
}

.xdsoft_datetimepicker .xdsoft_calendar td.xdsoft_default,
.xdsoft_datetimepicker .xdsoft_calendar td.xdsoft_current,
.xdsoft_datetimepicker .xdsoft_timepicker .xdsoft_time_box>div>div.xdsoft_current {
    color: contrast(@primaryColor, #000, #fff, 30%) !important;
    background-color: @primaryColor !important;
    box-shadow: none !important;
}

.xdsoft_datetimepicker .xdsoft_calendar td:hover,
.xdsoft_datetimepicker .xdsoft_timepicker .xdsoft_time_box>div>div:hover {
    color: contrast(@secondaryColor, #000, #fff, 30%) !important;
    background: @secondaryColor !important;
    box-shadow: none !important
}

//lazyload
.lazy-bg {
    background-image: none !important;
}

.lazy-placeholder:not(section),
.lazy-none {
    display: block;
    position: relative;
    padding-bottom: 56.25%;
    width: 100%;
    height: auto;
}

iframe.lazy-placeholder,
.lazy-placeholder:after {
    content: '';
    position: absolute;
    width: 200px;
    height: 200px;
    background: transparent no-repeat center;
    background-size: contain;
    top: 50%;
    left: 50%;
    transform: translateX(-50%) translateY(-50%);
    @fillSVG: replace("@{primaryColor}", "#", "%23");
    background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg width='32' height='32' viewBox='0 0 64 64' xmlns='http://www.w3.org/2000/svg' stroke='@{fillSVG}' %3e%3cg fill='none' fill-rule='evenodd'%3e%3cg transform='translate(16 16)' stroke-width='2'%3e%3ccircle stroke-opacity='.5' cx='16' cy='16' r='16'/%3e%3cpath d='M32 16c0-9.94-8.06-16-16-16'%3e%3canimateTransform attributeName='transform' type='rotate' from='0 16 16' to='360 16 16' dur='1s' repeatCount='indefinite'/%3e%3c/path%3e%3c/g%3e%3c/g%3e%3c/svg%3e");
}

section.lazy-placeholder:after {
    opacity: 0.5;
}

body {
    overflow-x: hidden;
}

a {
    transition: color 0.6s;
}

.mbr-section-btn, .mbr-section-btn-main {
    .btn {
        padding: 15px 32px;
        border-radius: 10px !important;
        margin: 8px;
        border-width: 2px !important;
        flex-direction: row-reverse;
        font-weight: 600 !important;

        .mbr-iconfont {
            margin-left: 0;
            margin-right: .75rem;
        }

        &:hover, &:focus {
            transform: scale(1.03);
        }
    }

    .btn-info {
        color: @primaryColor !important;
    }
}

img {
    border-radius: 16px !important;
}